spring:
  profiles: # 动态环境
    active: @env@ # 采坑记录，使用 @@ 获取 pom.xml 环境变量时，必须指定 build > resources > resource > <filtering>true</filtering>
  application:
    name: Demo
  mvc:
    throw-exception-if-no-handler-found: true # 出现错误时, 直接抛出异常(便于异常统一处理，否则捕获不到404)
  resources:
    add-mappings: false # 404关闭资源映射，否则会去寻找静态资源
  servlet:
    multipart: # 文件上传配置
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
  thymeleaf: # 响应渲染模板配置
    enabled: true
    prefix: "classpath:"
    suffix: .html
    encoding: utf-8
    mode: HTML
  jpa: # jpa + hibernate 配置
    open-in-view: false
    #    database-platform: org.hibernate.dialect.MySQL57Dialect # hibernate 方言代理
    database-platform: com.support.mvc.dao.CustomMySQL57Dialect # hibernate 方言代理
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # 数据库与实体映射命名策略
    # 参考： https://www.docs4dev.com/docs/zh/hibernate-orm/5.4/reference/hibernate_user_guide.html  {@link org.hibernate.cfg.AvailableSettings}
    properties:
      "hibernate.cache.use_second_level_cache": false # 禁用二级缓存
  #      "hibernate.dialect.storage_engine": innodb
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration # 禁止自动装配 jackson

---
# 开发环境 --------------------------------------------------------------------------------------------------------------
app: # 开发环境 *********************************************************************************************************
  env: dev # 当前环境：[dev:本地|beta:测试|prod:生产]
  version: @version@ # 当前运行版本号
  admin-user-id: 1 # 管理员用户ID
  admin-user: admin # 管理员账户登录账户
  ip: 127.0.0.1 # 当前主机 IP 地址
  domain: http://127.0.0.1:8080 # 应用路径，域名；
  path-root: /app/files # 应用文件根目录
  token-expired: 30 # token 默认过期时间，30 天
  auto-task:
    enabled: false # 是否启用服务内部的定时任务 true：是，false：否
spring:
  profiles: dev
  cache: # 需要使用 @EnableCaching 开启缓存，缓存配置
    type: jcache
    #    ehcache:
    #      config: ehcache.xml
    jcache:
      config: classpath:ehcache.xml
  #    cache-names: # 缓存名称， 使用 @CacheEvict 注解的 cacheNames 必须在这里定义
  #      - "TokenCache"
  #      - "ITabUserCache"
  #      - "ITabUserCache.login"
  #      - "ITabUserCache.token"
  #      - "ITabRoleCache"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo_main_db?serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 111111
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 2
      min-idle: 2
      # 最大连接数建议 （CPU核核数 * 2 + 1）
      max-active: 5
      # 配置获取连接等待超时的时间
      #max-wait: 60000
      # 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
      # 检测时:1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过maxEvictableIdleTimeMillis设置的值则直接物理关闭。
      # 2.在minIdle以内的不处理。 默认值：60 * 1000L
      #time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒，默认值：1000L * 60L * 30L
      #min-evictable-idle-time- millis: 300000
      # 默认值：1000L * 60L * 60L * 7
      #max-evictable-idle-time-millis: 600000
      validation-query: SELECT 1
      validation-query-timeout: 1
      # 设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过manEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      test-while-idle: true
      # 指明是否在从池中取出连接时进行检查,每次都检查， validation-query 不能为空
      test-on-borrow: false
      # 指明是否在归还到池中前进行检查
      test-on-return: false
      # 打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性. 参考：https://github.com/alibaba/druid/wiki/KeepAlive_cn
      keep-alive: true
      # 打开PSCache，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      pool-prepared-statements: true
      # 指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      ## 超过时间限制是否回收
      #remove-abandoned: true
      ## 超时时间、单位：秒
      #remove-abandoned-timeout: 60
      ## 关闭 abandoned 连接时输出错误日志
      #log-abandoned: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，防 sql 注入 ,wall,log4j
      filters: stat,wall,slf4j
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/druid/*"
        exclusions: "/druid/*,*.html,*.htm,*.js,*.css,*.gif,*.jpg,*.bmp,*.png,*.ico,*.svg,*.ttf,*.woff,*.woff2"
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则只允许 127.0.0.1 访问)
        #allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        #deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: druid
        # 登录密码
        login-password: druid
      filter:
        # 数据库监控统计： StatFilter
        stat:
          # 记录慢 sql 配置
          enabled: true
          db-type: mysql
          log-slow-sql: true
          merge-sql: true
          # 慢 sql 标准
          slow-sql-millis: 5000
        # 防火墙，防 sql 注入
        wall:
          db-type: mysql
        slf4j:
          enabled: true
          data-source-log-enabled: false
          connection-close-after-log-enabled: false
          # 格式化 SQL：com.alibaba.druid.filter.logging.LogFilter.logExecutableSql
          statement-executable-sql-log-enable: true
          statement-close-after-log-enabled: false
          result-set-log-enabled: false
  #    schema: classpath:schema.sql
  #    data: classpath:database-init.sql

---
# 测试环境 --------------------------------------------------------------------------------------------------------------
app: # 测试环境 *********************************************************************************************************
  env: beta # 当前环境：[dev:本地|beta:测试|prod:生产]
  version: @version@ # 当前运行版本号
  admin-user-id: 1 # 管理员用户ID
  admin-user: admin # 管理员账户登录账户
  ip: 127.0.0.1 # 当前主机 IP 地址
  domain: http://127.0.0.1:8080 # 应用路径，域名；
  path-root: /app/files # 应用文件根目录
  token-expired: 30 # token 默认过期时间，30 天
  auto-task:
    enabled: true # 是否启用服务内部的定时任务 true：是，false：否
spring:
  profiles: beta
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo_main_db?serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 111111
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 2
      min-idle: 2
      # 最大连接数建议 （CPU核核数 * 2 + 1）
      max-active: 5
      # 配置获取连接等待超时的时间
      #max-wait: 60000
      # 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
      # 检测时:1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过maxEvictableIdleTimeMillis设置的值则直接物理关闭。
      # 2.在minIdle以内的不处理。 默认值：60 * 1000L
      #time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒，默认值：1000L * 60L * 30L
      #min-evictable-idle-time- millis: 300000
      # 默认值：1000L * 60L * 60L * 7
      #max-evictable-idle-time-millis: 600000
      validation-query: SELECT 1
      validation-query-timeout: 1
      # 设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过manEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      test-while-idle: true
      # 指明是否在从池中取出连接时进行检查,每次都检查， validation-query 不能为空
      test-on-borrow: false
      # 指明是否在归还到池中前进行检查
      test-on-return: false
      # 打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性. 参考：https://github.com/alibaba/druid/wiki/KeepAlive_cn
      keep-alive: true
      # 打开PSCache，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      pool-prepared-statements: true
      # 指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      ## 超过时间限制是否回收
      #remove-abandoned: true
      ## 超时时间、单位：秒
      #remove-abandoned-timeout: 60
      ## 关闭 abandoned 连接时输出错误日志
      #log-abandoned: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，防 sql 注入 ,wall,log4j
      filters: stat,wall,slf4j
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/druid/*"
        exclusions: "/druid/*,*.html,*.htm,*.js,*.css,*.gif,*.jpg,*.bmp,*.png,*.ico,*.svg,*.ttf,*.woff,*.woff2"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则只允许 127.0.0.1 访问)
        #allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        #deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: druid
        # 登录密码
        login-password: druid
      filter:
        # 数据库监控统计： StatFilter
        stat:
          # 记录慢 sql 配置
          enabled: true
          db-type: mysql
          log-slow-sql: true
          merge-sql: true
          # 慢 sql 标准
          slow-sql-millis: 5000
        # 防火墙，防 sql 注入
        wall:
          db-type: mysql
        slf4j:
          enabled: true
          data-source-log-enabled: false
          connection-close-after-log-enabled: false
          # 格式化 SQL：com.alibaba.druid.filter.logging.LogFilter.logExecutableSql
          statement-executable-sql-log-enable: true
          statement-close-after-log-enabled: false
          result-set-log-enabled: false

---
# 生产环境 --------------------------------------------------------------------------------------------------------------
app: # 生产环境 *********************************************************************************************************
  env: prod # 当前环境：[dev:本地|beta:测试|prod:生产]
  version: @version@ # 当前运行版本号
  admin-user-id: 1 # 管理员用户ID
  admin-user: admin # 管理员账户登录账户
  ip: 127.0.0.1 # 当前主机 IP 地址
  domain: http://demo.cccc6666.com # 应用路径，域名；
  path-root: /var/www/demo/files # 应用文件根目录
  token-expired: 30 # token 默认过期时间，30 天
  auto-task:
    enabled: true # 是否启用服务内部的定时任务 true：是，false：否
spring:
  profiles: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo_main_db?serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 111111
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 2
      min-idle: 2
      # 最大连接数建议 （CPU核核数 * 2 + 1）
      max-active: 5
      # 配置获取连接等待超时的时间
      #max-wait: 60000
      # 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
      # 检测时:1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过maxEvictableIdleTimeMillis设置的值则直接物理关闭。
      # 2.在minIdle以内的不处理。 默认值：60 * 1000L
      #time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒，默认值：1000L * 60L * 30L
      #min-evictable-idle-time- millis: 300000
      # 默认值：1000L * 60L * 60L * 7
      #max-evictable-idle-time-millis: 600000
      validation-query: SELECT 1
      validation-query-timeout: 1
      # 设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过manEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      test-while-idle: true
      # 指明是否在从池中取出连接时进行检查,每次都检查， validation-query 不能为空
      test-on-borrow: false
      # 指明是否在归还到池中前进行检查
      test-on-return: false
      # 打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性. 参考：https://github.com/alibaba/druid/wiki/KeepAlive_cn
      keep-alive: true
      # 打开PSCache，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      pool-prepared-statements: true
      # 指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      ## 超过时间限制是否回收
      #remove-abandoned: true
      ## 超时时间、单位：秒
      #remove-abandoned-timeout: 60
      ## 关闭 abandoned 连接时输出错误日志
      #log-abandoned: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，防 sql 注入 ,wall,log4j
      filters: stat,wall,slf4j
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/druid/*"
        exclusions: "/druid/*,*.html,*.htm,*.js,*.css,*.gif,*.jpg,*.bmp,*.png,*.ico,*.svg,*.ttf,*.woff,*.woff2"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则只允许 127.0.0.1 访问)
        #allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        #deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: druid
        # 登录密码
        login-password: druid
      filter:
        # 数据库监控统计： StatFilter
        stat:
          # 记录慢 sql 配置
          enabled: true
          db-type: mysql
          log-slow-sql: true
          merge-sql: true
          # 慢 sql 标准
          slow-sql-millis: 5000
        # 防火墙，防 sql 注入
        wall:
          db-type: mysql
        slf4j:
          enabled: true
          data-source-log-enabled: false
          connection-close-after-log-enabled: false
          # 格式化 SQL：com.alibaba.druid.filter.logging.LogFilter.logExecutableSql
          statement-executable-sql-log-enable: true
          statement-close-after-log-enabled: false
          result-set-log-enabled: false



#  redis: # redis 单机配置 >>>>>>
#    host: 127.0.0.1
#    port: 6379
#    database: 0 # 数据库分片索引
#    timeout: 1s
#    password: 111111
#    lettuce:
#      pool:
#        min-idle: 1 #连接池中的最小空闲连接
#        max-idle: 10 #连接池中的最大空闲连接
#        max-active: 20 # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
#  redis: # redis 哨兵配置 >>>>>>
#    sentinel:
#      master: 'master'
#      nodes: '192.168.0.101:6379,192.168.0.102:6379,192.168.0.103:6379'
#    database: 0 # 数据库分片索引
#    timeout: 1s
#    password: 111111
#    lettuce:
#      pool:
#        min-idle: 1 #连接池中的最小空闲连接
#        max-idle: 10 #连接池中的最大空闲连接
#        max-active: 20 # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
#  redis: # redis 集群配置 >>>>>>
#    cluster:
#      max-redirects: 5 # redis 命令执行时最多转发次数
#      nodes: '192.168.0.101:6379,192.168.0.102:6379,192.168.0.103:6379'
#    database: 0 # 数据库分片索引
#    timeout: 1s
#    password: 111111
#    lettuce:
#      pool:
#        min-idle: 1 #连接池中的最小空闲连接
#        max-idle: 10 #连接池中的最大空闲连接
#        max-active: 20 # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）









































