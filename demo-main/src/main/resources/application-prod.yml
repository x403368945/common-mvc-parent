app: # 生产环境 todo 编辑时注意，请同时变更其他环境对应的参数
  env: prod # 当前环境：[dev:本地|beta:测试|prod:生产]
  admin-user-id: 1 # 管理员用户ID
  admin-user: admin # 管理员账户登录账户
  ip: 127.0.0.1 # 当前主机 IP 地址；可使用 frp 服务器IP
  domain: http://demo.cccc6666.com # 应用路径，域名；可使用 frp 服务器域名
  markdown: http://demo.cccc6666.com/md/ # markdown 文档地址
  path-root: /var/www/demo/files # 应用文件根目录

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo_main_db?serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: 111111
    type: com.alibaba.druid.pool.DruidDataSource
    druid: # https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
      # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 2
      min-idle: 2
      # 最大连接数建议 （CPU核核数 * 2 + 1）
      max-active: 5
      # 配置获取连接等待超时的时间
      #max-wait: 60000
      # 配置间隔多久启动一次DestroyThread，对连接池内的连接才进行一次检测，单位是毫秒。
      # 检测时:1.如果连接空闲并且超过minIdle以外的连接，如果空闲时间超过maxEvictableIdleTimeMillis设置的值则直接物理关闭。
      # 2.在minIdle以内的不处理。 默认值：60 * 1000L
      #time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒，默认值：1000L * 60L * 30L
      #min-evictable-idle-time- millis: 300000
      # 默认值：1000L * 60L * 60L * 7
      #max-evictable-idle-time-millis: 600000
      validation-query: SELECT 1
      validation-query-timeout: 1
      # 设置从连接池获取连接时是否检查连接有效性，true时，如果连接空闲时间超过manEvictableIdleTimeMillis进行检查，否则不检查;false时，不检查
      test-while-idle: true
      # 指明是否在从池中取出连接时进行检查,每次都检查， validation-query 不能为空
      test-on-borrow: false
      # 指明是否在归还到池中前进行检查
      test-on-return: false
      # 打开后，增强timeBetweenEvictionRunsMillis的周期性连接检查，minIdle内的空闲连接，每次检查强制验证连接有效性. 参考：https://github.com/alibaba/druid/wiki/KeepAlive_cn
      keep-alive: true
      # 打开PSCache，Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      pool-prepared-statements: true
      # 指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      ## 超过时间限制是否回收
      #remove-abandoned: true
      ## 超时时间、单位：秒
      #remove-abandoned-timeout: 60
      ## 关闭 abandoned 连接时输出错误日志
      #log-abandoned: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，防 sql 注入 ,wall,log4j
      filters: stat,wall,slf4j
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: "/druid/*"
        exclusions: "/druid/*,*.html,*.htm,*.js,*.css,*.gif,*.jpg,*.bmp,*.png,*.ico,*.svg,*.ttf,*.woff,*.woff2"
      # 配置DruidStatViewServlet
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则只允许 127.0.0.1 访问)
        #allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        #deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 登录名
        login-username: druid
        # 登录密码
        login-password: druid
      filter:
        # 数据库监控统计： StatFilter
        stat:
          # 记录慢 sql 配置
          enabled: true
          db-type: mysql
          log-slow-sql: true
          merge-sql: true
          # 慢 sql 标准
          slow-sql-millis: 5000
        # 防火墙，防 sql 注入
        wall:
          db-type: mysql
        slf4j:
          enabled: true
          data-source-log-enabled: false
          connection-close-after-log-enabled: false
          # 格式化 SQL：com.alibaba.druid.filter.logging.LogFilter.logExecutableSql
          statement-executable-sql-log-enable: true
          statement-close-after-log-enabled: false
          result-set-log-enabled: false
  #    schema: classpath:schema.sql
  #    data: classpath:database-init.sql
  data:
    mongodb:
      #      host: localhost
      #      port: 27017
      #      authentication-database: admin
      #      username: root
      #      password: 111111
      #      database: demo_main_db
      auto-index-creation: true
      uri: "mongodb://root:111111@localhost:27017/demo_main_db?authSource=admin&authMechanism=SCRAM-SHA-1"
