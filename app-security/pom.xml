<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>common-mvc-parent</artifactId>
        <groupId>com.ccx.parent</groupId>
        <version>1.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>app-security</artifactId>
    <!-- // spring-mvc start >> -->
    <!--<packaging>war</packaging>-->
    <!-- // spring-mvc end <<<< -->
    <!-- // spring-boot start >> -->
    <packaging>jar</packaging>
    <properties>
        <main.class>com.ccx.security.AppSecurityApplication</main.class>
    </properties>
    <!-- // spring-boot end <<<< -->

    <dependencies>
        <dependency>
            <groupId>com.ccx.parent</groupId>
            <artifactId>common-mvc</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--
               打 war 包部署到外部 tomcat ：
               打包的时候可以不用包进去，别的设施会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。
               相当于compile，但是打包阶段做了exclude操作
        -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>-->
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- // spring-mvc start >> -->
            <plugin> <!-- war 包插件 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <!-- // spring-mvc end <<<< -->
            <!-- // spring-boot start >> -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable><!-- executable：在jar包中内置shell脚本，用于 linux 服务启动模式 -->
                    <fork>true</fork> <!-- devtools 热启动配置 -->
                    <addResources>true</addResources>
                    <mainClass>${main.class}</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- // spring-boot end <<<< -->
        </plugins>
    </build>
</project>
