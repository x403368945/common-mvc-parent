### ********************************************************************************************************************
### 测试自定义 Convert 表
### @author 谢长春 on 2020-03-11
### ********************************************************************************************************************
### 测试自定义 Convert 表: 分页查询
GET http://{{host}}:{{port}}/1/convert/page/1/10
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 列表查询，不分页
#GET http://{{host}}:{{port}}/1/convert
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 按 id 查询单条记录
#GET http://{{host}}:{{port}}/1/convert/{{id}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 按 id+uid 查询单条记录
GET http://{{host}}:{{port}}/1/convert/1/70235586336344dab550a7eeb7325621
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 保存
POST http://{{host}}:{{port}}/1/convert
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "ids": [
    1,
    2
  ],
  "item": {
    "key": "SUCCESS",
    "value": "1",
    "comment": "成功"
  }
}

### 测试自定义 Convert 表: 保存
POST http://{{host}}:{{port}}/1/convert
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "items": [
    {
      "key": "SUCCESS",
      "value": "1",
      "comment": "成功"
    },
    {
      "key": "FAILURE",
      "value": "0",
      "comment": "失败"
    }
  ]
}

### 测试自定义 Convert 表: 保存
POST http://{{host}}:{{port}}/1/convert
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "ids": [
    100,
    101,
    102
  ]
}

### 测试自定义 Convert 表: 保存
POST http://{{host}}:{{port}}/1/convert
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "images": [
    "100000000000000000000000000000000000000.png",
    "200000000000000000000000000000000000000.png",
    "300000000000000000000000000000000000000.png"
  ]
}

### 测试自定义 Convert 表: 修改
PUT http://{{host}}:{{port}}/1/convert/1
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "id": 1,
  "uid": "70235586336344dab550a7eeb7325621",
  "ids": [
    1,
    2
  ],
  "images": [
    "100000000000000000000000000000000000000.png",
    "200000000000000000000000000000000000000.png",
    "300000000000000000000000000000000000000.png"
  ],
  "codes": [
    "MESSAGE",
    "FILE_COPY",
    "ORDER_BY"
  ],
  "items": [
    {
      "key": "SUCCESS",
      "value": "1",
      "comment": "成功"
    },
    {
      "key": "FAILURE",
      "value": "0",
      "comment": "失败"
    }
  ],
  "item": {
    "key": "SUCCESS",
    "value": "3",
    "comment": "成功"
  },
  "insertTime": "2019-12-12 11:50:09.000",
  "insertUserId": 1,
  "updateTime": "2020-03-11 15:38:05.186",
  "updateUserId": 1,
  "deleted": "NO",
  "timestamp": 1576124577146
}

### 测试自定义 Convert 表: 按 id 物理删除
#DELETE http://{{host}}:{{port}}/1/convert/{{id}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 按 id + uid 物理删除
#DELETE http://{{host}}:{{port}}/1/convert/{{id}}/{{uid}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 按 id+uid 删除单条记录
PATCH http://{{host}}:{{port}}/1/convert/7/c4b4b1c6d4a44f17a47cf0113e503b63
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试自定义 Convert 表: 按 id 批量逻辑删除
#PATCH http://{{host}}:{{port}}/1/convert
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}
#
#[1,2]

### 测试自定义 Convert 表: 按 id+uid 批量逻辑删除
PATCH http://{{host}}:{{port}}/1/convert
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

[
  {
    "id": 4,
    "uid": "f6596074dc384cbeb072e88aae07d261"
  },
  {
    "id": 6,
    "uid": "22bec396427d4a3f830a24f703dfb17f"
  }
]

###

