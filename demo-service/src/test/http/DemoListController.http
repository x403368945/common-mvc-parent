### ********************************************************************************************************************
### 测试案例表
### @author 谢长春 on 2020-03-11
### ********************************************************************************************************************
### 测试案例表: 分页查询
GET http://{{host}}:{{port}}/1/demo-list/page/1/10
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 分页查询
GET http://{{host}}:{{port}}/1/demo-list/page/1/10?insertTimeRange={"begin":"2018-12-27", "end":"2018-12-27"}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 分页查询
GET http://{{host}}:{{port}}/1/demo-list/page/1/10?amountRange={"min":0.0,"max":2000.0}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 分页查询
GET http://{{host}}:{{port}}/1/demo-list/page/1/10?amountRange={"min":0.0,"max":2000.0}&sorts=[{name:"updateTime", direction:"DESC"}]
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 分页查询
GET http://{{host}}:{{port}}/1/demo-list/page/vo/1/10
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 列表查询，不分页
GET http://{{host}}:{{port}}/1/demo-list
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 列表查询，不分页
GET http://{{host}}:{{port}}/1/demo-list?insertTimeRange={"begin":"2018-12-27", "end":"2018-12-27"}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 列表查询，不分页
GET http://{{host}}:{{port}}/1/demo-list/vo
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 按 id 查询单条记录
#GET http://{{host}}:{{port}}/1/demo-list/{{id}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试案例表: 按 id+uid 查询单条记录
GET http://{{host}}:{{port}}/1/demo-list/{{id}}/{{uid}}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 保存
POST http://{{host}}:{{port}}/1/demo-list
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "name": "JX",
  "content": "mMCqBHZnIEzvmYh",
  "status": "WATING",
  "amount": 1000
}

### 测试案例表: 修改
PUT http://{{host}}:{{port}}/1/demo-list/{{id}}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

{
  "uid": "8dbdec428e9547d8b11b7253774a674f",
  "name": "PeXImPsqeI",
  "content": "OyTlwNFavgqaHgc",
  "status": "RUNNING",
  "amount": 7871.1,
  "updateTime": "2019-07-21 15:21:42"
}

### 测试案例表: 按 id 物理删除
#DELETE http://{{host}}:{{port}}/1/demo-list/{{id}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试案例表: 按 id + uid 物理删除
#DELETE http://{{host}}:{{port}}/1/demo-list/{{id}}/{{uid}}
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}

### 测试案例表: 按 id+uid 删除单条记录
PATCH http://{{host}}:{{port}}/1/demo-list/{{id}}/{{uid}}
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

### 测试案例表: 按 id 批量逻辑删除
#PATCH http://{{host}}:{{port}}/1/demo-list
#Content-Type: application/json
#Authorization: Basic {{username}} {{password}}
#
#[1,2]

### 测试案例表: 按 id+uid 批量逻辑删除
PATCH http://{{host}}:{{port}}/1/demo-list
Content-Type: application/json
Authorization: Basic {{username}} {{password}}

[
  {
    "id": 0,
    "uid": ""
  }
]

### 自定义方言
GET http://{{host}}:{{port}}/demo-list/1/test
Authorization: Basic {{username}} {{password}}
